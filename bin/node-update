#!/bin/bash 

#====================================
# Begin boilerplate
set -e

PRG="$0"
while [ -h "$PRG" ] ; do
   PRG=`readlink "$PRG"`
done

pushd `dirname $PRG` > /dev/null
cd ..
BASEDIR=`pwd`
popd > /dev/null

. ${BASEDIR}/bin/helpers/functions

# End boilerplate
#====================================

get_target $1

load_local_config

ROOT_USER="root"

ssh ${ROOT_USER}@${TARGET_IP} apt-get install --yes rsync python python-iniparse python-netaddr

REMOTE_DIR=`ssh ${ROOT_USER}@${TARGET_IP} mktemp -d`

rsync -arv --exclude ".git/" --exclude "code/" ${BASEDIR}/* ${ROOT_USER}@${TARGET_IP}:${REMOTE_DIR}
rsync -arv --exclude ".git/" ${BASEDIR}/code/* ${ROOT_USER}@${TARGET_IP}:/opt/openstack/

ssh ${ROOT_USER}@${TARGET_IP} mkdir -p /etc/openstack/
scp ${CONFDIR}/openstack.conf ${ROOT_USER}@${TARGET_IP}:/etc/openstack/openstack.conf
scp ${CONFDIR}/${TARGET_IP}.conf ${ROOT_USER}@${TARGET_IP}:/etc/openstack/machine.conf

for ROLE in "db" "messagequeue" "identity" "imagestore" "compute" "objectstore" "webui"; do
	IN_ROLE=$(get_config ${MACHINE_CONF_FILE} roles ${ROLE} --default "no")
	
	echo "In role: ${ROLE}? : ${IN_ROLE}"
	
	if [[ "${IN_ROLE}" == "yes" ]]; then
		if [[ -d ${CONFDIR}/${ROLE} ]]; then
			rsync -arv ${CONFDIR}/${ROLE}/* ${ROOT_USER}@${TARGET_IP}:/var/openstack/${ROLE}/config/
		fi
		
		ssh ${ROOT_USER}@${TARGET_IP} ${REMOTE_DIR}/roles/${ROLE}/script
	fi
done

# TODO: Make sure this is safe!!
ssh ${ROOT_USER}@${TARGET_IP} rm -rf ${REMOTE_DIR}

